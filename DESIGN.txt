The genre of my game is RPG with turn based combat portions. 
The name is League of 8Bit. 
The goal is to defeat or avoid several enemy champions in order to reach the enemy nexus, which is the win condition.
The enemies can be avoided, allowing the player to proceed to the next screen without triggering a combat portion. However,
if the character collides with an enemy, a battle will be triggered. If the player loses the battle it's game over. 
The character moves around with arrow keys. Selections in combat mode are also made with the arrow keys and spacebar. The
spacebar will also make dialogue progress.
The modes differ in that one is RPG style where you control a main character and make them walk around. The other mode
is a turn based combat mode where you must fight an enemy champion.

EDIT (9/2/15):
I managed to fulfill most of these design goals, but the game did end up being shorter 
than I initially planned, and I only included one enemy champion as 
opposed to the 5 that I had planned for. However, the core gameplay remains 
in line with what I had set as my goal. I also did not include dialogue portions, though
I previously had an idea to. 

I ended up scrapping the idea of having multiple enemy champions because 
I ran into an issue with loading too many scenes, where for some reason the animation
would freak out when I added more walk and battle scenes. I couldn't fix the issue in the 
end and I felt that it didn't add significantly to the core gameplay, since it was just
recalling old classes, so I kept the game as short as it is. The con is that the game is 
shorter, but the pro is that what I have works and is relatively robust.